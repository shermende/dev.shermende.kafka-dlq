# environment for develop
# project: kafka-dlq-retry
# ./usr/bin/kafka-topics --create --replication-factor 1 --zookeeper zookeeper:2181 --partitions 10 --topic self-test
version: '3'

services:
  #
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    expose:
      - 2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
  kafka:
    image: confluentinc/cp-kafka:5.3.1
    expose:
      - 9091
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INTERNAL
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INTERNAL://kafka:9091,LISTENER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop:3.23.0
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9091
    depends_on:
      - kafka
  # log aggregation
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - discovery.type=single-node
    depends_on:
      - kafka
  kibana:
    image: kibana:7.2.0
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  fluentd:
    build: fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    depends_on:
      - elasticsearch
  # jvm monitoring
  grafana:
    image: grafana/grafana:5.3.2
    network_mode: host
    ports:
      - 3000:3000
  prometheus:
    image: prom/prometheus:latest
    network_mode: host
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro